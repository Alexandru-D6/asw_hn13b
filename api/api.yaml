openapi: 3.0.1
info:
  version: 1.0.0
  title: Hacker News
  description: "This is the Open API documentation for the REST API of our beloved application **Wall of Tweets** deployed at <https://asw-api-demo.herokuapp.com/>. <br>All operations are executable. Only one operation requires authentication: `deleteTweet`. In this case, you must **Authorize** your request by providing the api_key vaule you got when you created the tweet."
servers:
  - url: 'https://asw-api-demo.herokuapp.com/'
paths:
  /submission/news:
    get:
      tags:
      - Submissions
      summary: Obté el llistat de submissions de tipus news.
      operationId: getNewsSubmissions
      responses:
        200:
          description: operació finalitzada amb éxit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTweetResult'
  /submission/newest:
    get:
      tags:
      - Submissions
      summary: Obté el llistat de submissions de tipus newest.
      operationId: getNewestSubmissions
      responses:
        200:
          description: operació finalitzada amb éxit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTweetResult'
  /submission/ask:
    get:
      tags:
      - Submissions
      summary: Obté el llistat de submissions de tipus ask.
      operationId: getAskSubmissions
      responses:
        200:
          description: operació finalitzada amb éxit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTweetResult'
  
  /submission/{submissionId}:
    get:
      tags:
      - Submissions
      summary: Troba una submission segons el seu ID.
      description: Retorna tant el contingut de a submission com tots els seus comentaris. 
      operationId: getTSubmissionById
      parameters:
      - name: submissionId
        in: path
        description: ID de la Submission a buscar
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweet'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404'
    delete:
      tags:
      - Submissions
      summary: Esborra la submission amb submissionId
      operationId: deleteSubmission
      parameters:
      - name: submissionId
        in: path
        description: Submission ID a esborrar
        required: true
        schema:
          type: integer
      responses:
        204:
          description: Submission esborrat
          content:
            application/json: {}
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404'
        401:
          description: 'Error: Unauthorized'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error401'
        403:
          description: 'Error: Forbidden'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error403'
      security:
      - ApiKeyAuth: []
    
    put:
      tags:
      - Submissions
      summary: Edita una submission
      operationId: editSubmission
      parameters:
      - name: submissionId
        in: path
        description: ID de la submission a editar
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Edited submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweet'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404'
  
  /submission/post/:apiKey/:title/:text/{url}:
    post:
      tags:
      - Submissions
      summary: Crea una submission
      operationId: createSubmission
      parameters:
      - name: apiKey
        in: path
        description: apiKey de l'usuari que vol crear la submission
        required: true
        schema:
          type: string
      - name: title
        in: path
        description: titol de la submission a crear
        required: true
        schema:
          type: string
      - name: url
        in: query
        description: url de la submission a crear
        required: false
        schema:
          type: string
      responses:
        200:
          description: Created submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweet'
        404:
          description: 'Error: Already created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404'
  
  /submission/vote/submissionID:
    put:
      tags:
      - Submissions
      summary: Vota una submission
      operationId: voteSubmission
      parameters:
      - name: submissionId
        in: path
        description: ID de la submission a votar. 
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Voted submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweet'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404'
  /submission/unvote/submissionID:
    put:
      tags:
      - Submissions
      summary: Desfà la votació d'una submission
      operationId: unvoteSubmission
      parameters:
      - name: submissionId
        in: path
        description: ID de la submission a desvotar. 
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Unvoted submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweet'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404'
  
  /user/submissions/userID:
    get:
      tags:
      - User
      summary: Obté el llistat de submissions de l'usuari amb userID.
      operationId: getUserSubmissions
      parameters:
        - name: userID
          in: path
          description: ID de l'usuari del que volem el llistat de submissions.
          required: true
          schema:
            type: integer
      responses:
        200:
          description: operació finalitzada amb éxit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTweetResult'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404'
  
  /user/submissions/voted/userID:
    get:
      tags:
      - User
      summary: Obté el llistat de submissions que ha votat l'usuari amb userID.
      operationId: getUserVotedSubmissions
      parameters:
        - name: userID
          in: path
          description: ID de l'usuari del que volem el llistat de submissions votades.
          required: true
          schema:
            type: integer
      responses:
        200:
          description: operació finalitzada amb éxit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTweetResult'
        404:
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
              examples:
                errorExample:
                  $ref: '#/components/examples/error404'     
  
components:
  schemas:
    Tweet:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        author:
          type: string
          minLength: 4
          example: 'My name'
        content:
          type: string
          minLength: 4
          maxLength: 280
          example: 'My content'
        likes:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        _links:
          type: object
          properties:
            self:
              type: string
              format: url
              example: 'https://asw-api-demo.herokuapp.com/tweets/2'
    AddTweetResult:
      type: object
      properties:
        new_tweet:
          $ref: '#/components/schemas/Tweet'
        api_key:
          type: string
          example: "MjAyMC0wNC0xOCAxMjoyODo0MSBVVEM=\n"
    ErrorResult:
      type: object
      properties:
        status:
          type: integer
          enum: [400, 401, 403, 404, 409]
        error: 
          type: string
          enum: ["Bad Request", "Unauthorized", "Forbidden", "Not Found", "Conflict"]
        message: 
          type: string
  examples:
    error400:
      value:
        status: 400
        error: "Bad Request"
        message: "Content is too long (maximum is 280 characters)"
    error401:
      value:
        status: 401
        error: "Unauthorized"
        message: "You provided no api key (X-API-KEY Header)"
    error403:
      value:
        status: 403
        error: "Forbidden"
        message: "Your api key (X-API-KEY Header) is not valid"
    error404:
      value:
        status: 404
        error: "Not Found"
        message: "No Tweet with that ID"
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-KEY #Custom headers in rails apps must have the X- prefix
      in: header